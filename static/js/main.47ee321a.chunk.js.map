{"version":3,"sources":["Components/FormLogin/formLogin.module.css","app/hooks.ts","Components/FormLogin/formLogin.tsx","data/data.ts","helpers/validate.ts","app/formSlice.ts","helpers/authFunctions.ts","Components/FormLogin/choiceAuth.tsx","Components/FormLogin/button.tsx","Components/FormLogin/inputs.tsx","Components/FormLogin/error.tsx","Components/preloader/preloader.tsx","Pages/Login/login.tsx","App.tsx","app/store.ts","index.tsx","Pages/Login/login.module.css"],"names":["module","exports","useAppDispatch","useDispatch","useAppSelector","useSelector","FormLogin","message","state","formSlice","emptyFields","errorFields","className","style","formLogin","formLoginError","nameClass","text","users","email","password","regExpDic","createSlice","name","initialState","viewPassword","choiceAuth","loading","reducers","changeInput","action","payload","value","required","changeAuth","changePasswordView","changeLoading","submitForm","every","el","trim","data","test","validate","find","searchUser","obj","push","addUser","actions","ChoiceAuth","dispatch","clickChoiceAuth","e","type","styleEnter","formText","formTextActive","styleRegistration","onClick","Button","label","preventDefault","setTimeout","clickSubmit","submitBtnOff","submitBtn","Inputs","inputChange","target","dataset","formGroup","htmlFor","onChange","fromInput","id","placeholder","blockPasswordView","faViewPassword","Error","Preloader","Login","textMessage","loginStyle","login","blockFrom","blockInfo","App","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47ee321a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formLogin\":\"formLogin_formLogin__2NxtA\",\"formLoginError\":\"formLogin_formLoginError__1bJuJ\",\"formGroup\":\"formLogin_formGroup__FTdR2\",\"blockPasswordView\":\"formLogin_blockPasswordView__3OOp1\",\"faViewPassword\":\"formLogin_faViewPassword__NsQCZ\",\"fromInput\":\"formLogin_fromInput__1FwSp\",\"formText\":\"formLogin_formText__1pGZ-\",\"formTextActive\":\"formLogin_formTextActive__3edaF\",\"submitBtn\":\"formLogin_submitBtn__2R41W\",\"emptyFieldsError\":\"formLogin_emptyFieldsError__1zAz5\",\"blockBtn\":\"formLogin_blockBtn__18riq\",\"submitBtnOff\":\"formLogin_submitBtnOff__1Ldvj\",\"choiceAuth\":\"formLogin_choiceAuth__bB1-w\",\"errorFields\":\"formLogin_errorFields__1Fr1R\"};","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport type { RootState, AppDispatch } from \"./store\";\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React, { FC } from \"react\";\r\nimport { ChoiceAuth, Button, Inputs, Error } from \"..\";\r\nimport { useAppSelector } from \"../../app/hooks\";\r\nimport { RootState } from \"../../app/store\";\r\nimport style from \"./formLogin.module.css\";\r\n\r\nexport const FormLogin: FC = () => {\r\n  const message = useAppSelector(\r\n    (state: RootState): string | null => state.formSlice.message\r\n  );\r\n  const emptyFields = useAppSelector(\r\n    (state: RootState): boolean => state.formSlice.emptyFields\r\n  );\r\n  const errorFields = useAppSelector(\r\n    (state: RootState) => state.formSlice.errorFields\r\n  );\r\n  return (\r\n    <form\r\n      className={\r\n        errorFields\r\n          ? `${style.formLogin} ${style.formLoginError}`\r\n          : `${style.formLogin}`\r\n      }\r\n    >\r\n      <ChoiceAuth />\r\n      <Inputs />\r\n      {message === \"Вы успешно зашли в приложение\" ||\r\n      message === \"Вы успешно зарегистрированы\" ? null : (\r\n        <Button />\r\n      )}\r\n      {emptyFields ? (\r\n        <Error nameClass=\"errorFields\" text=\"Введите все поля\" />\r\n      ) : null}\r\n      {errorFields ? (\r\n        <Error nameClass=\"errorFields\" text=\"Неккоректный email и пароль\" />\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n","interface IUsers {\r\n  [key: string]: string;\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport const users: IUsers[] = [\r\n  { email: \"gosha@mail.ru\", password: \"Gosha15\" },\r\n];\r\n","import { IData } from \"../interface/formInterface\";\r\ninterface IRegExp {\r\n  [key: string]: RegExp;\r\n  email: RegExp;\r\n  password: RegExp;\r\n}\r\nconst regExpDic: IRegExp = {\r\n  email:\r\n    /^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/,\r\n  password:\r\n    /([a-z]+[A-Z]+[0-9]+|[a-z]+[0-9]+[A-Z]+|[A-Z]+[a-z]+[0-9]+|[A-Z]+[0-9]+[a-z]+|[0-9]+[a-z]+[A-Z]+|[0-9]+[A-Z]+[a-z]+)/,\r\n};\r\n\r\nexport const validate = (data: IData[]) => {\r\n  const res = data.every((el) => regExpDic[el.required].test(el.value));\r\n  return res;\r\n};\r\n\r\nexport const validateEmptyFields = (data: string[]) => {\r\n  return data.every((el) => el.trim() !== \"\");\r\n};\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { searchUser, addUser } from \"../helpers/authFunctions\";\r\nimport { validate, validateEmptyFields } from \"../helpers/validate\";\r\nimport { IActionChangeInput } from \"../interface/formInterface\";\r\ninterface IState {\r\n  [key: string]: any;\r\n  email: string;\r\n  password: string;\r\n  viewPassword: boolean;\r\n  emptyFields: boolean;\r\n  choiceAuth: string;\r\n  errorFields: boolean;\r\n  message: null | string;\r\n  loading: boolean;\r\n}\r\nconst initialState: IState = {\r\n  email: \"\",\r\n  password: \"\",\r\n  viewPassword: false,\r\n  emptyFields: false,\r\n  errorFields: false,\r\n  choiceAuth: \"enter\",\r\n  message: null,\r\n  loading: false,\r\n};\r\n\r\nexport const formSlice = createSlice({\r\n  name: \"formSlice\",\r\n  initialState,\r\n  reducers: {\r\n    changeInput(state, action: PayloadAction<IActionChangeInput>) {\r\n      const { value, required } = action.payload;\r\n      state.emptyFields = false;\r\n      state.errorFields = false;\r\n      state[required] = value;\r\n    },\r\n    changeAuth(state, action: PayloadAction<string>) {\r\n      if (state.choiceAuth === action.payload) return;\r\n      state.emptyFields = false;\r\n      state.errorFields = false;\r\n      state.email = \"\";\r\n      state.password = \"\";\r\n      state.message = null;\r\n      state.choiceAuth = action.payload;\r\n    },\r\n    changePasswordView(state, action: PayloadAction) {\r\n      state.viewPassword = !state.viewPassword;\r\n    },\r\n    changeLoading(state, action: PayloadAction) {\r\n      state.loading = !state.loading;\r\n    },\r\n    submitForm(state, action: PayloadAction<string>) {\r\n      state.message = null;\r\n      const { email, password } = state;\r\n      if (!validateEmptyFields([email, password])) {\r\n        state.emptyFields = true;\r\n        return;\r\n      }\r\n\r\n      const obj = [\r\n        { value: email, required: \"email\" },\r\n        { value: password, required: \"password\" },\r\n      ];\r\n      if (!validate(obj)) {\r\n        state.errorFields = true;\r\n        return;\r\n      }\r\n      if (action.payload === \"enter\") {\r\n        searchUser(email, password)\r\n          ? (state.message = \"Вы успешно зашли в приложение\")\r\n          : (state.message = \"Неправильные логин и пароль\");\r\n      } else if (action.payload === \"registration\") {\r\n        addUser({ email, password })\r\n          ? (state.message = \"Такой пользователь существует\")\r\n          : (state.message = \"Вы успешно зарегистрированы\");\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  changeInput,\r\n  changePasswordView,\r\n  submitForm,\r\n  changeAuth,\r\n  changeLoading,\r\n} = formSlice.actions;\r\nexport default formSlice.reducer;\r\n","import { users } from \"../data/data\";\r\n\r\nexport const searchUser = (email: string, password: string) => {\r\n  const res = users.find(\r\n    (el) => el.email === email && el.password === password\r\n  );\r\n  return res;\r\n};\r\n\r\nexport const addUser = (obj: { email: string; password: string }) => {\r\n  const res = users.find((el) => el.email === obj.email);\r\n  if (res) {\r\n    return true;\r\n  }\r\n  users.push(obj);\r\n};\r\n","import { FC } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\r\nimport { RootState } from \"../../app/store\";\r\nimport { changeAuth } from \"../../app/formSlice\";\r\nimport style from \"./formLogin.module.css\";\r\nexport const ChoiceAuth: FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  //selectors\r\n  const choiceAuth = useAppSelector(\r\n    (state: RootState): string => state.formSlice.choiceAuth\r\n  );\r\n  //\r\n  //handlers\r\n  const clickChoiceAuth = (\r\n    e: React.MouseEvent<HTMLParagraphElement>,\r\n    type: string\r\n  ) => {\r\n    dispatch(changeAuth(type));\r\n  };\r\n\r\n  //\r\n  const styleEnter =\r\n    choiceAuth === \"enter\"\r\n      ? `${style.formText} ${style.formTextActive}`\r\n      : style.formText;\r\n\r\n  const styleRegistration =\r\n    choiceAuth === \"registration\"\r\n      ? `${style.formText} ${style.formTextActive}`\r\n      : style.formText;\r\n  return (\r\n    <div className={style.choiceAuth}>\r\n      <p onClick={(e) => clickChoiceAuth(e, \"enter\")} className={styleEnter}>\r\n        Вход\r\n      </p>\r\n      <p\r\n        onClick={(e) => clickChoiceAuth(e, \"registration\")}\r\n        className={styleRegistration}\r\n      >\r\n        Регистрация\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import { useAppSelector, useAppDispatch } from \"../../app/hooks\";\r\nimport { submitForm, changeLoading } from \"../../app/formSlice\";\r\nimport { RootState } from \"../../app/store\";\r\nimport { FC } from \"react\";\r\nimport style from \"./formLogin.module.css\";\r\n\r\nexport const Button: FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  //selectors\r\n  const errorFields = useAppSelector(\r\n    (state: RootState): boolean => state.formSlice.errorFields\r\n  );\r\n  const emptyFields = useAppSelector(\r\n    (state: RootState): boolean => state.formSlice.emptyFields\r\n  );\r\n  const choiceAuth = useAppSelector(\r\n    (state: RootState): string => state.formSlice.choiceAuth\r\n  );\r\n  //\r\n\r\n  //handlers\r\n  const clickSubmit = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n    if (errorFields || emptyFields) return;\r\n    dispatch(changeLoading());\r\n    setTimeout(() => {\r\n      dispatch(submitForm(choiceAuth));\r\n      dispatch(changeLoading());\r\n    }, 1000);\r\n  };\r\n  //\r\n  const label = choiceAuth === \"enter\" ? \"Войти\" : \"Зарегистрироваться\";\r\n  return (\r\n    <button\r\n      onClick={(e) => clickSubmit(e)}\r\n      className={\r\n        emptyFields || errorFields\r\n          ? `${style.submitBtnOff} ${style.submitBtn}`\r\n          : style.submitBtn\r\n      }\r\n      type=\"submit\"\r\n    >\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\n","import { RootState } from \"../../app/store\";\r\nimport { useAppSelector, useAppDispatch } from \"../../app/hooks\";\r\nimport { changeInput, changePasswordView } from \"../../app/formSlice\";\r\nimport style from \"./formLogin.module.css\";\r\nimport { FC } from \"react\";\r\n\r\nexport const Inputs: FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  //selectors\r\n  const viewPassword = useAppSelector(\r\n    (state: RootState): boolean => state.formSlice.viewPassword\r\n  );\r\n  const email = useAppSelector(\r\n    (state: RootState): string => state.formSlice.email\r\n  );\r\n  const password = useAppSelector(\r\n    (state: RootState): string => state.formSlice.password\r\n  );\r\n  //\r\n\r\n  //handlers\r\n  const inputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = e.target.value;\r\n    const required: string = e.target.dataset.required!;\r\n    dispatch(changeInput({ value, required }));\r\n  };\r\n  const clickViewPassword = (e: React.MouseEvent) => {\r\n    dispatch(changePasswordView());\r\n  };\r\n  //\r\n  return (\r\n    <>\r\n      <div className={style.formGroup}>\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          onChange={(e) => inputChange(e)}\r\n          value={email}\r\n          className={style.fromInput}\r\n          type=\"email\"\r\n          id=\"email\"\r\n          placeholder=\"Введите email\"\r\n          data-required=\"email\"\r\n        ></input>\r\n      </div>\r\n      <div className={style.formGroup}>\r\n        <label htmlFor=\"password\">Пароль</label>\r\n        <div className={style.blockPasswordView}>\r\n          <input\r\n            onChange={(e) => inputChange(e)}\r\n            value={password}\r\n            className={style.fromInput}\r\n            type={viewPassword ? \"text\" : \"password\"}\r\n            id=\"password\"\r\n            placeholder=\"Введите пароль\"\r\n            data-required=\"password\"\r\n          ></input>\r\n          <i\r\n            onClick={(e) => clickViewPassword(e)}\r\n            className={\r\n              viewPassword\r\n                ? `${style.faViewPassword} fa fa-eye-slash fa-lg`\r\n                : `${style.faViewPassword} fa fa-eye fa-lg`\r\n            }\r\n          ></i>\r\n        </div>\r\n      </div>{\" \"}\r\n    </>\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport style from \"./formLogin.module.css\";\r\n\r\ninterface IError {\r\n  nameClass: string;\r\n  text: string;\r\n}\r\n\r\nexport const Error: FC<IError> = ({ nameClass, text }) => {\r\n  return <p className={style[nameClass]}>{text}</p>;\r\n};\r\n","import \"./preloader.css\";\r\nexport const Preloader = () => {\r\n  return (\r\n    <div className=\"lds-ring\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport loginStyle from \"./login.module.css\";\r\nimport { useAppSelector } from \"../../app/hooks\";\r\nimport { FormLogin } from \"../../Components\";\r\nimport { RootState } from \"../../app/store\";\r\nimport { Preloader } from \"../../Components\";\r\n\r\nexport const Login: FC = () => {\r\n  const loading = useAppSelector((state: RootState) => state.formSlice.loading);\r\n  const message = useAppSelector(\r\n    (state: RootState): string | null => state.formSlice.message\r\n  );\r\n  const textMessage = message ? (\r\n    <p className={loginStyle.message}>{message}</p>\r\n  ) : (\r\n    <>\r\n      <p>Добро пожаловать в мое приложение</p>\r\n      <p>Email должен быть типа: nick@mail.com.</p>\r\n      <p>\r\n        Пароль должен состоять из цифр и латинских букв верхнего и нижнего\r\n        регистра.\r\n      </p>\r\n    </>\r\n  );\r\n  return (\r\n    <div className={loginStyle.login}>\r\n      <div className={loginStyle.blockFrom}>\r\n        <FormLogin />\r\n      </div>\r\n      <div className={loginStyle.blockInfo}>\r\n        {loading ? <Preloader /> : textMessage}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { Login } from \"./Pages\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Login />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport formSlice from \"./formSlice\";\n\nexport const store = configureStore({\n  reducer: { formSlice },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"login_login__1BJmN\",\"blockInfo\":\"login_blockInfo__1S9Vd\",\"blockFrom\":\"login_blockFrom__1wZt7\",\"message\":\"login_message__1ewjb\"};"],"sourceRoot":""}